import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import java.sql.Connection;
import java.sql.Statement;
import java.sql.ResultSet;
import java.sql.SQLException;

/**
 * Classe principal para iniciar a aplica√ß√£o PetStop.
 * Respons√°vel por:
 * 1. Testar a conex√£o com o banco de dados.
 * 2. Iniciar a interface gr√°fica Swing.
 */
public class Main {

    public static void main(String[] args) {
        //Tentar conectar ao banco de dados, usando a classe Conexao.
        System.out.println("INFO: Tentando conectar ao banco de dados PetStop...");
        Connection conn = Conexao.conectar();

        //Se n√£o conseguir conectar, exibo erro e encerro o programa
        if (conn == null) {
            mostrarMensagemErroFatal(
                "Falha cr√≠tica ao conectar ao banco de dados.\n" +
                "Verifique se o servidor MySQL est√° em execu√ß√£o, se o banco 'petstop' (ou 'PetStop') existe,\n" +
                "e se as credenciais em Conexao.java (usu√°rio: " + Conexao.USUARIO + ") est√£o corretas.\n" +
                "Consulte o console para mais detalhes do erro JDBC.\n\n" +
                "A aplica√ß√£o ser√° encerrada."
            );
            System.err.println("ERRO FATAL: Conex√£o com o banco de dados n√£o estabelecida. Encerrando aplica√ß√£o.");
            return;
        }

        System.out.println("INFO: Conex√£o com o banco de dados PetStop estabelecida com sucesso! ‚úÖ");

        //Verificar se as tabelas principais existem
        try {
            System.out.println("INFO: Verificando tabelas...");
            boolean tabelasOk = verificarTabelas(conn);
            if (!tabelasOk) {
                mostrarMensagemErroFatal(
                    "Uma ou mais tabelas essenciais (animais, produtos) n√£o foram encontradas no banco de dados.\n" +
                    "Por favor, execute o script.sql para criar a estrutura do banco.\n\n" +
                    "A aplica√ß√£o ser√° encerrada."
                );
                Conexao.fechar(conn); // Fecha a conex√£o antes de sair.
                System.err.println("ERRO FATAL: Tabelas n√£o encontradas. Encerrando aplica√ß√£o.");
                return;
            }
            System.out.println("INFO: Tabelas 'animais' e 'produtos' parecem estar presentes. üëç");
        } finally {
            Conexao.fechar(conn);
            System.out.println("INFO: Conex√£o de teste inicial com o banco de dados foi fechada.");
        }

        //In√≠cio da interface gr√°fica (EDT)
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                try {
                    // Define um Look and Feel para uma apar√™ncia mais moderna ou nativa do sistema.
                    UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
                } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException e) {
                    System.err.println("AVISO: N√£o foi poss√≠vel definir o Look and Feel do sistema: " + e.getMessage());
                }

                System.out.println("INFO: Iniciando interface gr√°fica do PetStop...");

                PetStopUI telaPrincipal = new PetStopUI();
                telaPrincipal.setTitle("PetStop - Gerenciamento üê∂üê±üõí");
                telaPrincipal.setVisible(true);

                JFrame placeholderFrame = new JFrame("PetStop - Gerenciamento (Em Desenvolvimento)");
                placeholderFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                placeholderFrame.setSize(600, 400); //Tamanho da janela de placeholder

                JLabel placeholderLabel = new JLabel(
                    "<html><div style='text-align: center;'>" +
                    "<h1>üê∂ PetStop Gerenciamento üê±üõí</h1>" +
                    "<p>Conex√£o com o banco de dados testada com sucesso.</p>" +
                    "<p>Tabelas 'animais' e 'produtos' verificadas.</p>" +
                    "</div></html>",
                    SwingConstants.CENTER
                );
                placeholderFrame.add(placeholderLabel);
                placeholderFrame.setLocationRelativeTo(null); //Centraliza a janela
                placeholderFrame.setVisible(true);

                System.out.println("INFO: Interface gr√°fica do PetStop (ou placeholder) iniciada.");
            }
        });
    }

    //Verificar se as tabelas 'animais' e 'produtos' existem no banco
    private static boolean verificarTabelas(Connection conn) {
        boolean animaisOk = false;
        boolean produtosOk = false;

        try (Statement stmt = conn.createStatement()) {
            //Verifica a tabela 'animais'
            try (ResultSet rs = stmt.executeQuery("SELECT 1 FROM animais LIMIT 1")) {
                animaisOk = true; //Se a query n√£o lan√ßar exce√ß√£o, a tabela existe
            } catch (SQLException e) {
                System.err.println("ERRO: Tabela 'animais' n√£o encontrada ou inacess√≠vel. " + e.getMessage());
            }

            //Verifica a tabela 'produtos'
            try (ResultSet rs = stmt.executeQuery("SELECT 1 FROM produtos LIMIT 1")) {
                produtosOk = true; //Se a query n√£o lan√ßar exce√ß√£o, a tabela existe
            } catch (SQLException e) {
                System.err.println("ERRO: Tabela 'produtos' n√£o encontrada ou inacess√≠vel. " + e.getMessage());
            }
        } catch (SQLException e) {
            System.err.println("ERRO: Falha ao criar Statement para verificar tabelas. " + e.getMessage());
            return false; //Falha geral na verifica√ß√£o
        }
        return animaisOk && produtosOk;
    }

    //Exibe uma mensagem de erro cr√≠tica e encerra o programa
    private static void mostrarMensagemErroFatal(String mensagem) {
        Runnable exibirErro = () -> JOptionPane.showMessageDialog(
            null,
            mensagem,
            "Erro Cr√≠tico - PetStop",
            JOptionPane.ERROR_MESSAGE
        );

        if (SwingUtilities.isEventDispatchThread()) {
            exibirErro.run();
        } else {
            try {
                SwingUtilities.invokeAndWait(exibirErro);
            } catch (Exception e) {
                //Caso o SwingUtilities falhar (improv√°vel aqui), imprime no console.
                System.err.println("ERRO CR√çTICO ADICIONAL AO MOSTRAR MENSAGEM: " + mensagem);
                e.printStackTrace();
            }
        }
    }
}
